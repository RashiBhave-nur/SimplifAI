Based on the provided JSON-structured code summaries, generate a comprehensive design document with diagrams AND a separate .mmd file content. Use the exact following format:

# High-Level Design

## 1. System Architecture
```mermaid
graph TD
    %% Use the Dependencies section from JSON to create nodes and connections
    %% Example:
    A[Component A] --> B[Component B]
    B --> C[Component C]
```

## 2. Class Relationships
```mermaid
classDiagram
    %% Use the Class Diagram Elements section from JSON to create class diagram
    %% Example:
    class ClassName {
        +attribute1: type
        +method1(param: type): return_type
    }
    ClassA --|> ClassB: inherits
```

## 3. Sequence Flows
```mermaid
sequenceDiagram
    %% Use the Sequence Flow section from JSON to create sequence diagram
    %% Example:
    ComponentA->>ComponentB: methodName()
    ComponentB-->>ComponentA: response
```

## 4. Module Dependencies
```mermaid
graph LR
    %% Use the Dependencies section from JSON to show module relationships
    %% Example:
    ModuleA --> ModuleB
    ModuleB --> ModuleC
```

# Implementation Analysis

## 1. Component Details
```json
{
    "components": {
        "component_name": {
            "purpose": "description",
            "key_classes": ["class1", "class2"],
            "external_dependencies": ["dep1", "dep2"],
            "internal_dependencies": ["dep3", "dep4"]
        }
    }
}
```

## 2. Design Patterns
```json
{
    "patterns": [
        {
            "name": "pattern_name",
            "purpose": "why it's used",
            "location": "where it's implemented",
            "components": ["affected_components"]
        }
    ]
}
```

## 3. Technical Considerations
```json
{
    "performance": ["consideration1", "consideration2"],
    "security": ["security1", "security2"],
    "scalability": ["scale1", "scale2"],
    "limitations": ["limitation1", "limitation2"]
}
```

# MMD File Content
Create a section titled "MMD_FILE_CONTENT" that contains all the Mermaid diagrams combined into a single .mmd file format:

```
MMD_FILE_CONTENT
---
%% System Architecture
graph TD
    [Insert complete system architecture diagram]

---
%% Class Relationships
classDiagram
    [Insert complete class diagram]

---
%% Sequence Flows
sequenceDiagram
    [Insert complete sequence diagram]

---
%% Module Dependencies
graph LR
    [Insert complete dependency diagram]
```

Ensure all diagrams are valid Mermaid syntax and all JSON is properly formatted. Use the exact structure from the input JSON summaries to generate accurate diagrams and relationships. The MMD_FILE_CONTENT section should contain the complete, detailed diagrams without example placeholders.